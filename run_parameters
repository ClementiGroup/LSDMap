## pbs script environment
# number of nodes
nodes=1

# number of CPUs in each node
ppn=128

# walltime
walltime='8:00:00'

# queue name
queue='serial'


## Input file
# trajectory file name
file_traj='aladip.xyz'

# number of points in the trajectory will be detected from the 
# first line first column of the trajectory
npoints=`head -1 $file_traj|awk '{print $1}'`

## Parameters for local scale calculation
# number of points per job in local scale calculation
npoints_core=30000

# number of neighbors used in local scale calculation
neighbor_number=3000

# multidimensional scaling dimension
mds_dimension=1500

# the starting nearest neighbor for local MDS
mds_start=30

# the step size for local MDS
mds_step=15

# the starting value of the first derivative cutoff for the noise
cutoff_start=0.0

# the step size value of the first derivative cutoff for the noise
cutoff_step=0.01

# number of the first derivative cutoffs to calculate
cutoff_number=9

# number of CPUs used to share the trajectory
# From the available memory <memory_size> and the parameter of the trajectory, 
# we can get an optimizing <ncore> value
# <ncore> > (<memory_size>-1e9)/(<npoints>*<dimension>*4)
# use the smallest <ncore> that meets the formula above
ncore=1


## Parameters for Weighted LSDMap
# type of the LSDMap
# 0: LSDMap; 1: Weighted LSDMap
status_lsdmap=0

# If <status_lsdmap>==1, this is the file name of the weight,
# else, this line is ignored.
file_weight='weight.dat'

# status of the local scale
# 0: constant local scale; 1: user-defined local scale
status_localscale=1

# If <status_localscale>==0, this is the value of the constant local scale.
constant_eps=0.2

# If <status_localscale>==1, this is the file name in which the local scale 
# is stored.
file_eps=${file_traj}_eps

# The column number of the local scale in the file above.
# If the local scale file is from the output of the local scale program,
# you can get the column id from 
# <eps_column_id>=(<cutoff>-<cutoff_start>)/<cutoff_step>*5+3
eps_column_id=18


## Parameters for embedding new points to the diffusion map space.
# file name in which the new points are stored
file_add='add.xyz'

# number of points added per loop
nadd=50

# If <status_lsdmap>==1, this is the file name of the weight for the new points,
# else, this line is ignored.
file_weight_add='weight_add.dat'
